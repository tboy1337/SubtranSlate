[MAIN]
# Python code to execute, usually for sys.path manipulation
init-hook='import sys; sys.path.append(".")'

# Use multiple processes to speed up Pylint
jobs=0

# Pickle collected data for later comparisons
persistent=yes

# Minimum Python version to use for version dependent checks
py-version=3.6

# When enabled, pylint would attempt to guess common misconfiguration and emit
# user-friendly hints instead of false-positive error messages.
suggestion-mode=yes

[MESSAGES CONTROL]
# Disable specific warnings that are false positives or not relevant
disable=
    # Design issues
    too-few-public-methods,
    too-many-arguments,
    too-many-locals,
    too-many-branches,
    too-many-statements,
    too-many-instance-attributes,
    # Import issues for relative imports
    relative-beyond-top-level,
    # Test-specific
    protected-access,
    # Allow TODO comments
    fixme

[REPORTS]
# Set the output format
output-format=text

# Include message id in output
msg-template={path}:{line}:{column}: {msg_id}: {msg} ({symbol})

# Tells whether to display a full report or only the messages
reports=no

# Activate the evaluation score
score=yes

[REFACTORING]
# Maximum number of nested blocks for function / method body
max-nested-blocks=5

[BASIC]
# Good variable names which should always be accepted
good-names=i,j,k,ex,Run,_,f,e

# Regular expression matching correct function names
function-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct variable names
variable-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct constant names
const-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__))$

# Regular expression matching correct attribute names
attr-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct argument names
argument-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct class attribute names
class-attribute-rgx=([A-Za-z_][A-Za-z0-9_]{2,30}|(__.*__))$

# Regular expression matching correct method names
method-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct module names
module-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$

[FORMAT]
# Maximum number of characters on a single line
max-line-length=100

# Allow the body of an if to be on the same line as the test if there is no else
single-line-if-stmt=no

[LOGGING]
# Format style used to check logging format string
logging-format-style=old

[MISCELLANEOUS]
# List of note tags to take in consideration, separated by a comma
notes=FIXME,XXX,TODO

[SIMILARITIES]
# Minimum lines number of a similarity
min-similarity-lines=4

# Ignore comments when computing similarities
ignore-comments=yes

# Ignore docstrings when computing similarities
ignore-docstrings=yes

# Ignore imports when computing similarities
ignore-imports=no

[SPELLING]
# Spelling dictionary name
spelling-dict=

[TYPECHECK]
# List of decorators that produce context managers
contextmanager-decorators=contextlib.contextmanager

# List of members which are set dynamically and missed by pylint inference
generated-members=

# Tells whether missing members accessed in mixin class should be ignored
ignore-mixin-members=yes

# Tells whether to warn about missing members when the owner of the attribute
# is inferred to be None
ignore-none=yes

# This flag controls whether pylint should warn about no-member and similar
# checks whenever an opaque object is returned when inferring
ignore-on-opaque-inference=yes
